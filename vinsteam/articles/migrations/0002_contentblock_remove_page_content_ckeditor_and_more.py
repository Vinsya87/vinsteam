# Generated by Django 4.2 on 2023-04-25 05:31

import ckeditor_uploader.fields
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('articles', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='ContentBlock',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.PositiveIntegerField(unique=True, verbose_name='Номер блока')),
                ('content_ckeditor', ckeditor_uploader.fields.RichTextUploadingField(verbose_name='Контент')),
                ('css_class', models.CharField(blank=True, max_length=255, null=True, verbose_name='CSS класс')),
                ('div_id', models.CharField(blank=True, max_length=255, null=True, verbose_name='ID div')),
            ],
            options={
                'verbose_name': 'Блок контента',
                'verbose_name_plural': 'Блоки контента',
            },
        ),
        migrations.RemoveField(
            model_name='page',
            name='content_ckeditor',
        ),
        migrations.AddField(
            model_name='page',
            name='meta_description',
            field=models.TextField(blank=True, null=True, verbose_name='Meta Description'),
        ),
        migrations.AddField(
            model_name='page',
            name='meta_keywords',
            field=models.CharField(blank=True, max_length=255, null=True, verbose_name='Meta Keywords'),
        ),
        migrations.AddField(
            model_name='page',
            name='meta_title',
            field=models.CharField(blank=True, max_length=255, null=True, verbose_name='Meta Title'),
        ),
        migrations.AlterField(
            model_name='page',
            name='slug',
            field=models.SlugField(blank=True, max_length=255, null=True, unique=True, verbose_name='URL'),
        ),
        migrations.AddField(
            model_name='page',
            name='content_blocks',
            field=models.ManyToManyField(blank=True, to='articles.contentblock', verbose_name='Блоки контента'),
        ),
    ]
